name: CI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, develop ]
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  nano_build:
    name: Build Hedera application for NanoS, X and S+
    strategy:
      matrix:
        include:
          - SDK: "$NANOS_SDK"
            device: nanos
          - SDK: "$NANOX_SDK"
            device: nanox
          - SDK: "$NANOSP_SDK"
            device: nanosp
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Build
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python make BOLOS_SDK=${{ matrix.SDK }}
          cp bin/app.elf bin/hedera_${{ matrix.device }}.elf

      - name: Upload app binary
        uses: actions/upload-artifact@v3
        with:
          name: hedera_binaries
          path: ./bin/hedera_${{ matrix.device }}.elf
          if-no-files-found: error

  jobs-e2e-pytest-tests:
    name: Pytest tests

    needs: [nano_build]
    runs-on: ubuntu-latest

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Download app binaries
        uses: actions/download-artifact@v3

      - name: Gather artifacts
        run: |
          mkdir tests/elfs
          mv *_binaries/*.elf tests/elfs

      - name: Install APT dependencies
        run: sudo apt-get update && sudo apt-get install -y qemu-user-static

      - name: Install Ragger
        run: |
          pip install --extra-index-url https://test.pypi.org/simple/ -r tests/requirements.txt

      - name: Run speculos tests
        run: |
          pytest -v --tb=short ./tests

  scan-build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - uses: actions/checkout@v3
      - name: Build with Clang Static Analyzer
        run: |
          PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python make clean
          PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build
