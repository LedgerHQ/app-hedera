name: CI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, develop ]
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      golden_run:
        type: choice
        required: true
        default: 'Raise an error (default)'
        description: CI behavior if the test snapshots are different than expected.
        options:
          - 'Raise an error (default)'
          - 'Open a PR'

jobs:
  build_application:
    name: Build application using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      upload_app_binaries_artifact: compiled_app_binaries

  ragger_tests:
    name: Run ragger tests using the reusable workflow
    needs: build_application
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_ragger_tests.yml@v1
    with:
      download_app_binaries_artifact: compiled_app_binaries
      test_dir: tests
      regenerate_snapshots: ${{ inputs.golden_run == 'Open a PR' }}

  C_test:
    name: C unit tests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-lite:latest
    steps:
      - name: Clone
        uses: actions/checkout@v4
      - name: Install unit test dependencies
        run: |
          apt-get update && apt-get install -y cmake libcmocka-dev pkg-config
      - name: Configure unit tests
        run: |
          cd tests/unit
          cmake .
      - name: Build unit tests
        run: make -C tests/unit
      - name: Run unit tests
        run: make -C tests/unit test

  fuzzing_tests:
    name: Fuzzing tests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-lite:latest
    steps:
      - name: Clone
        uses: actions/checkout@v4
      - name: Install fuzzing dependencies
        run: |
          apt-get update && apt-get install -y \
            clang \
            cmake \
            build-essential \
            pkg-config \
            libc6-dev \
            libclang-rt-dev
      - name: Build fuzzers
        run: |
          cd fuzzing
          chmod +x run_fuzzing.sh
          ./run_fuzzing.sh build
      - name: Run fuzzing tests
        run: |
          cd fuzzing
          # Run short fuzzing campaign for CI (30 seconds per fuzzer)
          FUZZ_TIME=30 timeout 300 ./run_fuzzing.sh || true
      - name: Upload fuzzing artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fuzzing-artifacts
          path: |
            fuzzing/artifacts/
            fuzzing/fuzzing_report.txt
          retention-days: 30
        
